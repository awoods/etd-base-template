name: Unit tests

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.10.11]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Switch to Current Branch
        run: git checkout ${{ env.BRANCH }}
              
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Run flake8
        run: | 
          pip install flake8
          flake8 --ignore E203,W503,W504,E501,E731,E741 .

      # - name: Run unit tests
      #   run: python -m pytest tests/unit
      
      # - name: Run integration tests
      #   run: python -m pytest tests/integration

      - name: Run tests w/ coverage
        run: |
          pip install coverage
          python -m coverage run -p -m pytest
          python -m coverage combine
          python -m coverage report -m --skip-covered
          python -m coverage json

      coverage:
        name: Coverage
        needs: tests
        runs-on: ubuntu-latest
        steps:
          - name: "Check out the repo"
            uses: "actions/checkout@v2"

          - name: "Set up Python"
            uses: "actions/setup-python@v2"
            with:
              python-version: "3.10"

          - name: "Download coverage data"
            uses: actions/download-artifact@v3
            with:
              name: covdata

          - name: "Combine"
            run: |
              python -m tox -e coverage
              export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
              echo "total=$TOTAL" >> $GITHUB_ENV
              echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY

          - name: "Make badge"
            uses: schneegans/dynamic-badges-action@v1.4.0
            with:
              # GIST_TOKEN is a GitHub personal access token with scope "gist".
              auth: ${{ secrets.GIST_TOKEN }}
              gistID: 68bd7e7d15e4025d7bf71431bad92771
              filename: covbadge.json
              label: Coverage
              message: ${{ env.total }}%
              minColorRange: 50
              maxColorRange: 90
              valColorRange: ${{ env.total }}